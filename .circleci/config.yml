version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
      - image: neo4j:3.4.10-enterprise
        environment:
          NEO4J_AUTH: none
          NEO4J_HEAP_MEMORY: 256
          NEO4J_CACHE_MEMORY: 256M
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"

    working_directory: /go/src/github.com/Financial-Times/annotations-rw-neo4j
    environment:
          NEO4J_TEST_URL: "http://localhost:7474/db/data/"
          CIRCLE_TEST_REPORTS: /tmp/test-reports
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
          CIRCLE_ARTIFACTS: /tmp/artifacts

    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            go get github.com/mattn/goveralls
            go get -u github.com/jstemmer/go-junit-report
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run:
          name: Create test folder
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
            mkdir -p ${CIRCLE_ARTIFACTS}

      - run:
          name: Download vendored dependencies
          command: dep ensure -v -vendor-only
      - run:
          name: Go Build
          command: go build -v
      - run: |
          go test -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - run: |
          goveralls -coverprofile=$CIRCLE_COVERAGE_REPORT/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - store_test_results:
          path: /tmp/test-reports

      - store_artifacts:
          path: /tmp/artifacts
          destination: build

  docker_build:
    working_directory: /annotations-rw-neo4j
    docker:
      - image: docker:18.03
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .

workflows:
  version: 2
  tests_and_docker:
    jobs:
      - build
      - docker_build:
          requires:
            - build
